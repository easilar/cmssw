Introduction to CMSSW: http://cms-sw.github.io


How to produce nanoAOD events of H to Tau tau where Higgs has 130 GeV mass. 

cmsrel CMSSW_10_2_22

cd CMSSW_10_2_22/src

cmsenv

git cms-addpkg Configuration/Generator

# pull from my repo from the from-CMSSW_10_2_22 branch
# https://github.com/easilar/cmssw/tree/from-CMSSW_10_2_22
git remote add ece git@github.com:easilar/cmssw.git
git fetch ece
git checkout -b localmaster ece/from-CMSSW_10_2_22

scram b -j 8

scram b python

cmsDriver.py H125GGgluonfusion_13TeV_TuneCUETP8M1_cfi --conditions auto:run2_mc --fast -n 200 --era Run2_2016 --eventcontent AODSIM --relval 100000,500 --step GEN,SIM,RECOBEFMIX,DIGI:pdigi_valid,L1,DIGI2RAW,L1Reco,RECO --beamspot Realistic50ns13TeVCollision --datatier AODSIM  --no_exec

cmsRun H125GGgluonfusion_13TeV_TuneCUETP8M1_cfi_GEN_SIM_RECOBEFMIX_DIGI_L1_DIGI2RAW_L1Reco_RECO.py

cmsDriver.py step3  --conditions auto:phase1_2017_realistic --fast  -n 200 --era Run2_2017_FastSim --eventcontent MINIAODSIM --runUnscheduled  --filein file:H125GGgluonfusion_13TeV_TuneCUETP8M1_cfi_GEN_SIM_RECOBEFMIX_DIGI_L1_DIGI2RAW_L1Reco_RECO.root -s PAT --datatier MINIAODSIM --mc

cmsDriver.py step1 --filein file:step3_PAT.root --fileout file:HIG_Nano_1.root --mc --eventcontent NANOAODSIM --datatier NANOAODSIM --conditions auto:phase1_2017_realistic --step NANO --fast --era Run2_2017_FastSim -n 200

If all run properly, you may use gen_HTT_at_mass with options -m to set the Higgs mass and -N for the amount of events:
${CMSSW_BASE}/src/gen_HTT_at_mass -m 130 -N 200

# To submit to slurm cluster
login machine : ssh -XY lyoui
#Multiple jobs at a time
sbatch --partition=long --array=120-125 --output=submit_array.out submit_array.sh
This will submit samples for 5 different masses from 120 GeV to 125 GeV
#Single job
sbatch submit_single.sh 90 60000  # this comment will submit a job for mass = 90 GeV for 60k events
#Multiple jobs each seperate jobs:
#the comment below will submit a job for the masses between 90 to 100 (in bins of 1 GeV) for 60 k events. Each job will have a seperate job id
for i in {90..100}; do sbatch submit_single.sh i 60000 ; done

